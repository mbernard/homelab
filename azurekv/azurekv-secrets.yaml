apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret
metadata:
  name: azurekv-cluster-external-secret
spec:
  # The name to be used on the ExternalSecrets
  externalSecretName: "azurevk-external-secret"

  # This is a basic label selector to select the namespaces to deploy ExternalSecrets to.
  # you can read more about them here https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#resources-that-support-set-based-requirements
  namespaceSelector: {}

  # How often the ClusterExternalSecret should reconcile itself
  # This will decide how often to check and make sure that the ExternalSecrets exist in the matching namespaces
  refreshTime: "1m"

  # This is the spec of the ExternalSecrets to be created
  # The content of this was taken from our ExternalSecret example
  externalSecretSpec:
    refreshInterval: 1h
    secretStoreRef:
      kind: ClusterSecretStore
      name: azurekv-secret-store

    # k8s secret
    target:
      name: azurekv-secrets
      creationPolicy: Owner

    # extract all secrets
    dataFrom:
    - find:
        name:
          regexp: ".*"

    # data:
  # # name of the SECRET in the Azure KV (no prefix is by default a SECRET)
  # - secretKey: dev-secret-test
  #   remoteRef:
  #     key: dev-secret-test

  # # explicit type and name of secret in the Azure KV
  # - secretKey: dev-another-secret-test
  #   remoteRef:
  #     key: secret/dev-secret-test

  # # type/name of certificate in the Azure KV
  # # raw value will be returned, use templating features for data processing
  # - secretKey: dev-cert-test
  #   remoteRef:
  #     key: cert/dev-cert-test

  # # type/name of the public key in the Azure KV
  # # the key is returned PEM encoded
  # - secretKey: dev-key-test
  #   remoteRef:
  #     key: key/dev-key-test
